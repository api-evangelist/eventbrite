{
    "id": "11a4f0b61338449eda75b6ad4edc3a01",
    "name": "Eventbrite API",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "e50f4fb86fc97e87349861be552691c9",
            "name": "Post Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/",
            "description": "Makes a new event, and returns an event for the specified event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "body",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.name.html",
                    "description": "The name of the event. Value cannot be empty nor whitespace.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.description.html",
                    "description": "The description on the event page",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.organizer_id",
                    "description": "The ID of the organizer of this event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.start.utc",
                    "description": "The start time of the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.start.timezone",
                    "description": "Start time timezone (Olson format)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.end.utc",
                    "description": "The end time of the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.end.timezone",
                    "description": "End time timezone (Olson format)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.hide_start_date",
                    "description": "Whether the start date should be hidden",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.hide_end_date",
                    "description": "Whether the end date should be hidden",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.currency",
                    "description": "Event currency (3 letter code)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.venue_id",
                    "description": "The ID of a previously-created venue to associate with this event. You can omit this field or set it to null if you set online_event.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.online_event",
                    "description": "Is the event online-only (no venue)?",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.listed",
                    "description": "If the event is publicly listed and searchable. Defaults to True.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.logo.id",
                    "description": "(Deprecated) The logo for the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.logo_id",
                    "description": "The logo for the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.category_id",
                    "description": "The category (vertical) of the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.subcategory_id",
                    "description": "The subcategory of the event (US only)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.format_id",
                    "description": "The format (general type) of the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.shareable",
                    "description": "If users can share the event on social media",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.invite_only",
                    "description": "Only invited users can see the event page",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.password",
                    "description": "Password needed to see the event in unlisted mode",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.capacity",
                    "description": "Set specific capacity (if omitted, sums ticket capacities)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.show_remaining",
                    "description": "If the remaining number of tickets is publicly visible on the event page",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.is_reserved_seating",
                    "description": "If the event is reserved seating",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.show_pick_a_seat",
                    "description": "For reserved seating event, if attendees can pick their seats.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.show_seatmap_thumbnail",
                    "description": "For reserved seating event, if venue map thumbnail visible on the event page.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.source",
                    "description": "Source of the event (defaults to API)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "18b5fbd01aeaab7fea196b98a3f34421",
            "name": "Get Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}",
            "description": "Returns an event for the specified event. Many of Eventbrite?s API use cases resolve around pulling details of a specific event within an Eventbrite account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Event Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "a76521bcda2dbdab8305d39f5df7a5bc",
            "name": "Post Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}",
            "description": "Updates an event. Returns an event for the specified event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Event Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "body",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "933809039e60c87f7751170f97902ab7",
            "name": "Get Categories",
            "url": "httpswww.eventbriteapi.com\/v3\/\/categories\/{id}\/",
            "description": "Gets a category by ID as category.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "85854c99a62dbe5daa05f974002cb650",
            "name": "Get Subcategories",
            "url": "httpswww.eventbriteapi.com\/v3\/\/subcategories\/",
            "description": "Returns a list of subcategory as subcategories.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "a96fcef93886baa90f9e645a106626d4",
            "name": "Get Subcategories",
            "url": "httpswww.eventbriteapi.com\/v3\/\/subcategories\/{id}\/",
            "description": "Gets a subcategory by ID as subcategory.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "08ff80096fd1fe582eb613f33ee4c813",
            "name": "Get Checkout Settings Countries Currencies",
            "url": "httpswww.eventbriteapi.com\/v3\/\/checkout_settings\/countries_currencies\/",
            "description": "Get the countries and currencies which are supported by Eventbrite for ticket payment",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "a0e440dbd78bd9735518d473cb784860",
            "name": "Get Checkout Settings Methods",
            "url": "httpswww.eventbriteapi.com\/v3\/\/checkout_settings\/methods\/",
            "description": "Get the available checkout methods to do payments given a country and a currency.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "country",
                    "description": "Expected methods for Country",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency",
                    "description": "Expected methods for Currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "1a258dc9d4e03b5662c5a968b7e7aa98",
            "name": "Get Checkout Settings",
            "url": "httpswww.eventbriteapi.com\/v3\/\/checkout_settings\/",
            "description": "Searches and returns a list of checkout_settings for the current user as the key checkout_settings.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "country",
                    "description": "Expected methods for Country",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency",
                    "description": "Expected methods for Currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "checkout_methods",
                    "description": "One or more optional (comma-separated) checkout methods by which to filter checkout settings",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "search_most_recent_event",
                    "description": "&#160;",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "d5741494c800d938b33c663eab6661b8",
            "name": "Post Checkout Settings",
            "url": "httpswww.eventbriteapi.com\/v3\/\/checkout_settings\/",
            "description": "Creates a new checkout_settings object belonging to the current user. Two common settings are Eventbrite Payment Processing ( checkout_method = &#8220;eventbrite&#8221; ) and PayPal ( checkout_method = &#8220;paypal&#8221; ). In addition to the checkout_method you must provide the country and currency proceeds from the event should be paid to.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "58fdca44e4061169a0274419fc85563e",
            "name": "Get Checkout Settings Checkout Settings",
            "url": "httpswww.eventbriteapi.com\/v3\/\/checkout_settings\/:checkout_settings_id\/",
            "description": "Get a specific checkout_settings object by ID",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "3a374241ccb2fee61f8146d4d18d94ac",
            "name": "Get Events Event Checkout Settings",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/:event_id\/checkout_settings\/",
            "description": "Gets and returns a list of checkout_settings associated with a given event by its event_id.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "6d7cd76ce47bdb13538010a4b2933d47",
            "name": "Post Events Event Checkout Settings",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/:event_id\/checkout_settings\/",
            "description": "Associate a single or set of checkout_settings with a given event by its event_id. This does not add more checkout settings to the event, but instead replaces all checkout settings for the event with the one(s) submitted. The JSON post body is a string list of the checkout_settings IDs you want to associate.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "checkout_settings_ids",
                    "description": "A list of IDs for checkout settings that should be linked to the event. In the format: 1234,5678,9012",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "4f750a5f8050346ecdc148f12e698efe",
            "name": "Get Events Event Payout Settings",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/:event_id\/payout_settings\/",
            "description": "Gets and returns the payout_settings (user instrument ID) associated with a given event by its event_id.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "ef5accfc284d2aeed0988db9b12038b1",
            "name": "Post Events Event Payout Settings",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/:event_id\/payout_settings\/",
            "description": "Associate a payout user instrument ID with a given event, or clear the association by passing a null value for the user instrument ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "payout_settings.user_instrument_vault_id",
                    "description": "The vault ID for the user instrument to which payouts are sent",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "261c4ef6fd6ed2436e6dfd6a61681f43",
            "name": "Get Discounts Discount",
            "url": "httpswww.eventbriteapi.com\/v3\/\/discounts\/:discount_id\/",
            "description": "Returns the cross_event_discount with the specified :discount_id.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "aa4e0ca8712bd84ca180192dff95084b",
            "name": "Post Discounts Discount",
            "url": "httpswww.eventbriteapi.com\/v3\/\/discounts\/:discount_id\/",
            "description": "Updates the discount with the specified :discount_id. Returns the updated cross_event_discount. The fields sent are the ones that are going to be updated, the fields that are not sent will be unchanged. The same conditions and notes for the discount creation apply.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "discount.code",
                    "description": "Code used to activate discount.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.amount_off",
                    "description": "Fixed reduction amount.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.percent_off",
                    "description": "Percentage reduction.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.ticket_class_ids",
                    "description": "IDs of tickets to limit discount to.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.quantity_available",
                    "description": "Number of discount uses.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.start_date",
                    "description": "Allow use from this date. A datetime represented as a string in Naive Local ISO8601 date and time format, in the timezone of the event.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.start_date_relative",
                    "description": "Allow use from this number of seconds before the event starts. Greater than 59 and multiple of 60.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.end_date",
                    "description": "Allow use until this date. A datetime represented as a string in Naive Local ISO8601 date and time format, in the timezone of the event.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.end_date_relative",
                    "description": "Allow use until this number of seconds before the event starts. Greater than 59 and multiple of 60.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.hold_ids",
                    "description": "IDs of holds this discount can unlock.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "f54c88cbbcaab6efa5d27caf39c24af4",
            "name": "Delete Discounts Discount",
            "url": "httpswww.eventbriteapi.com\/v3\/\/discounts\/:discount_id\/",
            "description": "Deletes the cross_event_discount with the specified :discount_id.\nOnly unused discounts can be deleted.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "e4d0000aac75a4cabdcea0e7f788b6be",
            "name": "Post Discounts",
            "url": "httpswww.eventbriteapi.com\/v3\/\/discounts\/",
            "description": "Creates a discount. Returns the created cross_event_discount.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "discount.code",
                    "description": "Code used to activate discount.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.type",
                    "description": "The type of discount. (Valid choices are: access, hold, coded, or public)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.amount_off",
                    "description": "Fixed reduction amount.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.percent_off",
                    "description": "Percentage reduction.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.event_id",
                    "description": "ID of the event. Only used for single event discounts.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.ticket_class_ids",
                    "description": "IDs of tickets to limit discount to.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.quantity_available",
                    "description": "Number of discount uses.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.start_date",
                    "description": "Allow use from this date. A datetime represented as a string in Naive Local ISO8601 date and time format, in the timezone of the event.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.start_date_relative",
                    "description": "Allow use from this number of seconds before the event starts. Greater than 59 and multiple of 60.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.end_date",
                    "description": "Allow use until this date. A datetime represented as a string in Naive Local ISO8601 date and time format, in the timezone of the event.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.end_date_relative",
                    "description": "Allow use until this number of seconds before the event starts. Greater than 59 and multiple of 60.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.ticket_group_id",
                    "description": "ID of the ticket group.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "discount.hold_ids",
                    "description": "IDs of holds this discount can unlock.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "34d11deb7cb5b5d625cbf92c08ec4ad5",
            "name": "Get Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/",
            "description": "Returns an event for the specified event. Many of Eventbrite???s API use cases revolve around pulling details\nof a specific event within an Eventbrite account. Does not support fetching a repeating event series parent\n(see GET \/series\/:id\/).",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "3a5e21ccf4e0ef7bda5f9fdec307b991",
            "name": "Post Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/",
            "description": "Updates an event. Returns an event for the specified event. Does not support updating a repeating event\nseries parent (see POST \/series\/:id\/).",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "event.name.html",
                    "description": "The name of the event. Value cannot be empty nor whitespace.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.description.html",
                    "description": "The description on the event page",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.organizer_id",
                    "description": "The ID of the organizer of this event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.start.utc",
                    "description": "The start time of the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.start.timezone",
                    "description": "Start time timezone (Olson format)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.end.utc",
                    "description": "The end time of the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.end.timezone",
                    "description": "End time timezone (Olson format)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.hide_start_date",
                    "description": "Whether the start date should be hidden",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.hide_end_date",
                    "description": "Whether the end date should be hidden",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.currency",
                    "description": "Event currency (3 letter code)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.venue_id",
                    "description": "The ID of a previously-created venue to associate with this event. You can omit this field or set it to null if you set online_event.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.online_event",
                    "description": "Is the event online-only (no venue)?",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.listed",
                    "description": "If the event is publicly listed and searchable. Defaults to True.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.logo.id",
                    "description": "(Deprecated) The logo for the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.logo_id",
                    "description": "The logo for the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.category_id",
                    "description": "The category (vertical) of the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.subcategory_id",
                    "description": "The subcategory of the event (US only)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.format_id",
                    "description": "The format (general type) of the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.shareable",
                    "description": "If users can share the event on social media",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.invite_only",
                    "description": "Only invited users can see the event page",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.password",
                    "description": "Password needed to see the event in unlisted mode",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.capacity",
                    "description": "Set specific capacity (if omitted, sums ticket capacities)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.show_remaining",
                    "description": "If the remaining number of tickets is publicly visible on the event page",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.is_reserved_seating",
                    "description": "If the event is reserved seating",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.show_pick_a_seat",
                    "description": "For reserved seating event, if attendees can pick their seats.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.show_seatmap_thumbnail",
                    "description": "For reserved seating event, if venue map thumbnail visible on the event page.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.source",
                    "description": "Source of the event (defaults to API)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "a8d6d3b3e3a410c9afb373196043bb86",
            "name": "Delete Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/",
            "description": "Deletes an event if the delete is permitted. In order for a delete to be permitted, there must be no pending or\ncompleted orders. Returns a boolean indicating success or failure of the delete.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "a7bef7e746d3b7f2023c205f34cd2e79",
            "name": "Post Events Publish",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/publish\/",
            "description": "Publishes an event if it has not already been deleted. In order for publish to be permitted, the event must have all\nnecessary information, including a name and description, an organizer, at least one ticket, and valid payment options.\nThis API endpoint will return argument errors for event fields that fail to validate the publish requirements. Returns\na boolean indicating success or failure of the publish.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "d8d56d29cdb85aebfb137db90d8f997f",
            "name": "Post Events Unpublish",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/unpublish\/",
            "description": "Unpublishes an event. In order for a free event to be unpublished, it must not have any pending or completed orders,\neven if the event is in the past. In order for a paid event to be unpublished, it must not have any pending or completed\norders, unless the event has been completed and paid out. Returns a boolean indicating success or failure of the\nunpublish.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "112b699c8630ed55e6aabac32d059233",
            "name": "Post Events Cancel",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/cancel\/",
            "description": "Cancels an event if it has not already been deleted. In order for cancel to be permitted, there must be no pending or\ncompleted orders. Returns a boolean indicating success or failure of the cancel.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "5f25b56cf436ec9af3bbf9b768e79b27",
            "name": "Post Events Copy",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/copy\/",
            "description": "Creates a duplicate version of the event being copied. Returns the event object for the newly created event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "name",
                    "description": "The name of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start_date",
                    "description": "The start time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "end_date",
                    "description": "The end time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "timezone",
                    "description": "timezone for the new event (Olson format)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "edb25117bcfbdf556646cbd5a4f0a2d0",
            "name": "Get Events Display Settings",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/display_settings\/",
            "description": "Retrieves the display settings for an event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "02bc9ea465cf2901b9e739779e72c22e",
            "name": "Post Events Display Settings",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/display_settings\/",
            "description": "Updates the display settings for an event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "display_settings.show_start_date",
                    "description": "Whether to display the start date on the event listing",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "display_settings.show_end_date",
                    "description": "Whether to display the end date on the event listing",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "display_settings.show_start_end_time",
                    "description": "Whether to display event start and end time on the event listing",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "display_settings.show_timezone",
                    "description": "Whether to display the event timezone on the event listing",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "display_settings.show_map",
                    "description": "Whether to display a map to the venue on the event listing",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "display_settings.show_remaining",
                    "description": "Whether to display the number of remaining tickets",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "display_settings.show_organizer_facebook",
                    "description": "Whether to display a link to the organizer&#8217;s Facebook profile",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "display_settings.show_organizer_twitter",
                    "description": "Whether to display a link to the organizer&#8217;s Twitter profile",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "display_settings.show_facebook_friends_going",
                    "description": "Whether to display which of the user&#8217;s Facebook friends are going",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "display_settings.terminology",
                    "description": "Which terminology should be used to refer to the event (Valid choices are: tickets_vertical, or endurance_vertical)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "79b12fab367f07141c2789c5cf08480e",
            "name": "Get Events Ticket Classes",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/ticket_classes\/",
            "description": "Returns a paginated response with a key of\nticket_classes, containing a list of ticket_class.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "pos",
                    "description": "Only return ticket classes valid for the given point of sale (Valid choices are: online, or at_the_door)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "7e3ff38837a73f5e3e81080689d58cc2",
            "name": "Post Events Ticket Classes",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/ticket_classes\/",
            "description": "Creates a new ticket class, returning the result as a ticket_class\nunder the key ticket_class.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ticket_class.name",
                    "description": "Name of this ticket type",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.description",
                    "description": "Description of the ticket",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.quantity_total",
                    "description": "Total available number of this ticket, required for non-donation tickets",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.cost",
                    "description": "Cost of the ticket (currently currency must match event currency) e.g. $45 would be &#8216;USD,4500&#8217;",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.donation",
                    "description": "Is this a donation? (user-supplied cost)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.free",
                    "description": "Is this a free ticket?",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.include_fee",
                    "description": "Absorb the fee into the displayed cost",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.split_fee",
                    "description": "Absorb the payment fee, but show the eventbrite fee",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.hide_description",
                    "description": "Hide the ticket description on the event page",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.sales_channels",
                    "description": "A list of all supported sales channels ([&#8220;online&#8221;], [&#8220;online&#8221;, &#8220;atd&#8221;], [&#8220;atd&#8221;])",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.sales_start",
                    "description": "When the ticket is available for sale (leave empty for &#8216;when event published&#8217;)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.sales_end",
                    "description": "When the ticket stops being on sale (leave empty for &#8216;one hour before event start&#8217;)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.sales_start_after",
                    "description": "The ID of another ticket class - when it sells out, this class will go on sale.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.minimum_quantity",
                    "description": "Minimum number per order",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.maximum_quantity",
                    "description": "Maximum number per order (blank for unlimited)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.auto_hide",
                    "description": "Hide this ticket when it is not on sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.auto_hide_before",
                    "description": "Override reveal date for auto-hide",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.auto_hide_after",
                    "description": "Override re-hide date for auto-hide",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.hidden",
                    "description": "Hide this ticket",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.order_confirmation_message",
                    "description": "Order message per ticket type",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "373816f8dbd6c5063a2be3f8c1ddc1fa",
            "name": "Get Events Ticket Classes Ticket Class",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/ticket_classes\/:ticket_class_id\/",
            "description": "Gets and returns a single ticket_class by ID, as the key\nticket_class.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "f8b3a7fab5ec1e0eafab9712901b8c55",
            "name": "Post Events Ticket Classes Ticket Class",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/ticket_classes\/:ticket_class_id\/",
            "description": "Updates an existing ticket class, returning the updated result as a ticket_class under the key ticket_class.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ticket_class.name",
                    "description": "Name of this ticket type",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.description",
                    "description": "Description of the ticket",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.quantity_total",
                    "description": "Total available number of this ticket, required for non-donation tickets",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.cost",
                    "description": "Cost of the ticket (currently currency must match event currency) e.g. $45 would be &#8216;USD,4500&#8217;",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.donation",
                    "description": "Is this a donation? (user-supplied cost)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.free",
                    "description": "Is this a free ticket?",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.include_fee",
                    "description": "Absorb the fee into the displayed cost",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.split_fee",
                    "description": "Absorb the payment fee, but show the eventbrite fee",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.hide_description",
                    "description": "Hide the ticket description on the event page",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.sales_channels",
                    "description": "A list of all supported sales channels ([&#8220;online&#8221;], [&#8220;online&#8221;, &#8220;atd&#8221;], [&#8220;atd&#8221;])",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.sales_start",
                    "description": "When the ticket is available for sale (leave empty for &#8216;when event published&#8217;)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.sales_end",
                    "description": "When the ticket stops being on sale (leave empty for &#8216;one hour before event start&#8217;)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.sales_start_after",
                    "description": "The ID of another ticket class - when it sells out, this class will go on sale.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.minimum_quantity",
                    "description": "Minimum number per order",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.maximum_quantity",
                    "description": "Maximum number per order (blank for unlimited)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.auto_hide",
                    "description": "Hide this ticket when it is not on sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.auto_hide_before",
                    "description": "Override reveal date for auto-hide",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.auto_hide_after",
                    "description": "Override re-hide date for auto-hide",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.hidden",
                    "description": "Hide this ticket",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_class.order_confirmation_message",
                    "description": "Order message per ticket type",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "2bd2a0bc3cb83cb1b97d651098d22241",
            "name": "Delete Events Ticket Classes Ticket Class",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/ticket_classes\/:ticket_class_id\/",
            "description": "Deletes the ticket class. Returns {&quot;deleted&quot;: true}.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "break_dependency",
                    "description": "Delete even if ticket sales depend on this ticket. This will start ticket sales of dependents immediately.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "86fcd988cb9dd94cc9264dd51bf89ea8",
            "name": "Get Events Canned Questions",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/canned_questions\/",
            "description": "This endpoint returns canned questions of a single event (examples: first name, last name, company, prefix, etc.). This endpoint will return question.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "as_owner",
                    "description": "Return private events and more details",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "450511baa9a82edddafab24aae737efa",
            "name": "Post Events Canned Questions",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/canned_questions\/",
            "description": "Creates a new canned question; returns the result as a question.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "question.question.html",
                    "description": "Question displayed to the recipient",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.required",
                    "description": "Is an answer to this question required for registration?",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.type",
                    "description": "Type of Question (Valid choices are: checkbox, dropdown, text, paragraph, radio, or waiver)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.respondent",
                    "description": "Ask this question to the ticket buyer or each attendee? (Valid choices are: ticket_buyer, or attendee)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.waiver",
                    "description": "Waiver content for questions of type waiver",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.choices",
                    "description": "Choices for multiple choice questions. Format:[{&#8220;answer&#8221;: {&#8220;html&#8221;: &#8220;Choice goes here...&#8221;}}, {&#8220;answer&#8221;: {&#8220;html&#8221;: &#8220;Another choice goes here...&#8221;}}]",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.ticket_classes",
                    "description": "Tickets to which to limit this question.  Format: [{&#8220;id&#8221;: &#8220;1234&#8221;}, {&#8220;id&#8221;: &#8220;4567&#8221;}]",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.parent_choice_id",
                    "description": "ID of Parent Question (for subquestions)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.display_answer_on_order",
                    "description": "Is this question displayed on order confirmation?",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.canned_type",
                    "description": "String value of canned_type",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "2b1698ddfeedebe76c8885f9e9a7e8db",
            "name": "Get Events Questions",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/questions\/",
            "description": "Eventbrite allows event organizers to add custom questions that attendees fill\nout upon registration. This endpoint can be helpful for determining what\ncustom information is collected and available per event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "as_owner",
                    "description": "Return private events and more details",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "f81fa761471de66752deb1f935b104d8",
            "name": "Post Events Questions",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/questions\/",
            "description": "Creates a new question; returns the result as a question as the key question.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "question.question.html",
                    "description": "Question displayed to the recipient",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.required",
                    "description": "Is an answer to this question required for registration?",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.type",
                    "description": "Type of Question (Valid choices are: checkbox, dropdown, text, paragraph, radio, or waiver)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.respondent",
                    "description": "Ask this question to the ticket buyer or each attendee? (Valid choices are: ticket_buyer, or attendee)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.waiver",
                    "description": "Waiver content for questions of type waiver",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.choices",
                    "description": "Choices for multiple choice questions. Format:[{&#8220;answer&#8221;: {&#8220;html&#8221;: &#8220;Choice goes here...&#8221;}}, {&#8220;answer&#8221;: {&#8220;html&#8221;: &#8220;Another choice goes here...&#8221;}}]",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.ticket_classes",
                    "description": "Tickets to which to limit this question.  Format: [{&#8220;id&#8221;: &#8220;1234&#8221;}, {&#8220;id&#8221;: &#8220;4567&#8221;}]",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.parent_id",
                    "description": "ID of Parent Question (for subquestions)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.parent_choice_id",
                    "description": "ID of Parent Question (for subquestions)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "question.display_answer_on_order",
                    "description": "Is this question displayed on order confirmation?",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "c648ddf2d55bdd30fa1ade5c7723f6df",
            "name": "Get Events Questions",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/questions\/{id}\/",
            "description": "This endpoint will return question for a specific question id.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "96e54537ad1bb5df3f697288f0187eb1",
            "name": "Get Events Attendees Attendee",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/attendees\/:attendee_id\/",
            "description": "Returns a single attendee by ID, as the key attendee.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "957c6c4934280a82c7d6454778a73de0",
            "name": "Get Events Orders",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/orders\/",
            "description": "Returns a paginated response with a key of orders, containing a list of order against this event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "status",
                    "description": "Filter to active (attending), inactive (not attending), all (both) orders and all_not_deleted (active and inactive but not deleted) (Valid choices are: active, inactive, all, or all_not_deleted)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "changed_since",
                    "description": "Only return orders changed on or after the time given",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "last_item_seen",
                    "description": "Only return orders changed on or after the time given and with an id bigger than last item seen",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "only_emails",
                    "description": "Only include orders placed by one of these emails",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude_emails",
                    "description": "Don&#8217;t include orders placed by any of these emails",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "refund_request_statuses",
                    "description": "Return only orders with selected refund requests statuses. Possible values are: completed, pending, outside_policy, disputed, denied",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "b52da350936f49c65d7f13bd2c0d744c",
            "name": "Get Events Discounts",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/discounts\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/users\/#ebapi-get-users-user-id-discounts",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "b3e04906339bb7db8cfb226d9c9f99c3",
            "name": "Post Events Discounts",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/discounts\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/cross_event_discounts\/#ebapi-post-discounts",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "087e382f54dfd22b31d78d98fe9236e5",
            "name": "Get Events Discounts Discount",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/discounts\/:discount_id\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/cross_event_discounts\/#ebapi-get-discounts-discount-id",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "485d3bb9123e3df6ef13c032db1a9575",
            "name": "Post Events Discounts Discount",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/discounts\/:discount_id\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/cross_event_discounts\/#ebapi-post-discounts-discount-id",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "4f6dc306ff95f9e4e52623555086b25e",
            "name": "Delete Events Discounts Discount",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/discounts\/:discount_id\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/cross_event_discounts\/#ebapi-delete-discounts-discount-id",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "eb5cca2498c63b760cf3fe4b6058bc85",
            "name": "Get Events Public Discounts",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/public_discounts\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/users\/#ebapi-get-users-user-id-discounts",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "1fd2d463dcca3f4e0c385c507e626d20",
            "name": "Post Events Public Discounts",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/public_discounts\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/cross_event_discounts\/#ebapi-post-discounts",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "58f0d9e7191415f9a87d31b4dcf228f8",
            "name": "Get Events Public Discounts Discount",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/public_discounts\/:discount_id\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/cross_event_discounts\/#ebapi-get-discounts-discount-id",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "e698643ce1694de3f285432624015baa",
            "name": "Post Events Public Discounts Discount",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/public_discounts\/:discount_id\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/cross_event_discounts\/#ebapi-post-discounts-discount-id",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "ae28806621df162b5c6689c24cf68ab9",
            "name": "Delete Events Public Discounts Discount",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/public_discounts\/:discount_id\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/cross_event_discounts\/#ebapi-delete-discounts-discount-id",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "54095bdb48608b98cbfabdb92f08c86d",
            "name": "Get Events Access Codes",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/access_codes\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/users\/#ebapi-get-users-user-id-discounts",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "83f7e4323256fd6f73ed6c5c39f8d526",
            "name": "Post Events Access Codes",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/access_codes\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/cross_event_discounts\/#ebapi-post-discounts",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "44b7e3227dbe797ea0b9c3024666a4fe",
            "name": "Delete Events Access Codes",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/access_codes\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/cross_event_discounts\/#ebapi-delete-discounts-discount-id",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "79f7ecea857be8f11554280855584d7c",
            "name": "Get Events Access Codes Access Code",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/access_codes\/:access_code_id\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/cross_event_discounts\/#ebapi-get-discounts-discount-id",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "145c8c8afdf7fac541f7beb2f3d5490c",
            "name": "Post Events Access Codes Access Code",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/access_codes\/:access_code_id\/",
            "description": "Please use https:\/\/www.eventbrite.com\/developer\/v3\/endpoints\/cross_event_discounts\/#ebapi-get-discounts-discount-id",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "86eb0c8d4a045f2709bf038143867191",
            "name": "Get Events Transfers",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/transfers\/",
            "description": "Returns a list of transfers for the event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "changed_since",
                    "description": "Only return orders changed on or after the time given",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "47947c1a84065005be7d8f5f116f26d9",
            "name": "Get Events Teams",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/teams\/",
            "description": "Returns a list of attendee-team for the event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "ce02eb2115c6630b5522ed3c45feab95",
            "name": "Get Events Teams",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/teams\/{id}\/",
            "description": "Returns information for a single attendee-team.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "b0263be9d70594a1f97b7cb8a2c4150d",
            "name": "Get Events Teams Attendees",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/teams\/{id}\/attendees\/",
            "description": "Returns attendee for a single attendee-team.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "ee3de23ef6f4b3e311db77ba2cced841",
            "name": "Get Events Event Ticket Groups",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/:event_id\/ticket_groups\/",
            "description": "Get the list of ticket_group for the event with the specified :event_id.\nBy default, only the ticket groups that are live are shown.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "status",
                    "description": "Filter to active (attending), inactive (not attending), all (both) orders and all_not_deleted (active and inactive but not deleted) (Valid choices are: active, inactive, all, or all_not_deleted)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "fbc65b0b79097e1fc4432cab597fd516",
            "name": "Post Events Event Ticket Classes Ticket Class Ticket Groups Ticket Group",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/:event_id\/ticket_classes\/:ticket_class_id\/ticket_groups\/:ticket_group_id\/",
            "description": "Add the Ticket Class with the specified :ticket_class_id that belongs to the event with :event_id to the Ticket Group identified by :ticket_group_id.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "82b6ee1e48435beb146c679075cacd58",
            "name": "Delete Events Event Ticket Classes Ticket Class Ticket Groups Ticket Group",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/:event_id\/ticket_classes\/:ticket_class_id\/ticket_groups\/:ticket_group_id\/",
            "description": "Remove the Ticket Class with the specified :ticket_class_id that belongs to the event with :event_id from the Ticket Group identified by :ticket_group_id.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "6776f867da82419ea1ce5b927f97c294",
            "name": "Get Events Event Ticket Classes Ticket Class Ticket Groups",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/:event_id\/ticket_classes\/:ticket_class_id\/ticket_groups\/",
            "description": "Get the Ticket Groups for Ticket Class with the specified :ticket_class_id that belongs to the event with :event_id.\nBy default, only the ticket groups that are live are shown.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "status",
                    "description": "Filter to active (attending), inactive (not attending), all (both) orders and all_not_deleted (active and inactive but not deleted) (Valid choices are: active, inactive, all, or all_not_deleted)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "067c563aa58fa454382ac7bfb0bf8161",
            "name": "Get Events Ticket Buyer Settings",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/ticket_buyer_settings\/",
            "description": "Returns a ticket_buyer_settings for an event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "bf1b49a53e0cd3ecd9e74f97ea5cc2ce",
            "name": "Post Events Ticket Buyer Settings",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/{id}\/ticket_buyer_settings\/",
            "description": "Updates the ticket buyer settings for an event. Returns a ticket_buyer_settings.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ticket_buyer_settings.confirmation_message.html",
                    "description": "Confirmation message to display on order completion",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_buyer_settings.refund_request_enabled",
                    "description": "Whether refund requests are accepted for the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_buyer_settings.instructions.html",
                    "description": "Instructions to display on the ticket",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_buyer_settings.redirect_url",
                    "description": "Redirect to this url post-purchase. Will overwrite confirmation message.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "4ba644fade386e991b364ea0d01b1a9c",
            "name": "Get Formats",
            "url": "httpswww.eventbriteapi.com\/v3\/\/formats\/",
            "description": "Returns a list of format as formats.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "9781a737cc9bfe1caeb97a353b817fd3",
            "name": "Get Formats",
            "url": "httpswww.eventbriteapi.com\/v3\/\/formats\/{id}\/",
            "description": "Gets a format by ID as format.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "246ddeda3831d0641a71eaadde5d8936",
            "name": "Get Media",
            "url": "httpswww.eventbriteapi.com\/v3\/\/media\/{id}\/",
            "description": "Return an image for a given id.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "width",
                    "description": "Optional thumbnail width (you can specify only this value or also height)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "height",
                    "description": "Optional thumbnail height (you can specify only this value or also width)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "ad72704d94ccaf13cfc24f4bf03d8d4c",
            "name": "Get Media Upload",
            "url": "httpswww.eventbriteapi.com\/v3\/\/media\/upload\/",
            "description": "See Media Uploads.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "type",
                    "description": "The type of image to upload (Valid choices are: image-event-logo, image-event-logo-preserve-quality, image-event-view-from-seat, image-organizer-logo, image-user-photo, or image-structured-content)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "e37be773ab8efc80cc5dc7715653c2e8",
            "name": "Get Users Me Notifications",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/me\/notifications\/",
            "description": "Gets a paginated response of notification objects for a determined user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "25ada6f44845876cacaf015d323c307c",
            "name": "Get Orders",
            "url": "httpswww.eventbriteapi.com\/v3\/\/orders\/{id}\/",
            "description": "Gets an order by ID an order object.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "297fa1603dfdee78ed747c0c25bf7e55",
            "name": "Get Users User Organizations",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/:user_id\/organizations\/",
            "description": "Returns a continuated list of organizations\naccessible to the current user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "e1b26ecb7274b64e7a503b193c8bbc2b",
            "name": "Post Organizers",
            "url": "httpswww.eventbriteapi.com\/v3\/\/organizers\/",
            "description": "Makes a new organizer. Returns an organizer as organizer.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "organizer.name",
                    "description": "The name of the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.description.html",
                    "description": "The description of the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.long_description.html",
                    "description": "The long description of the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.logo.id",
                    "description": "The logo id of the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.website",
                    "description": "The website for the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.twitter",
                    "description": "The Twitter handle for the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.facebook",
                    "description": "The Facebook URL ID for the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.instagram",
                    "description": "The Instagram numeric ID for the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "03b3b2cb000f0ffad326a2ff6561122a",
            "name": "Get Organizers",
            "url": "httpswww.eventbriteapi.com\/v3\/\/organizers\/{id}\/",
            "description": "Gets an organizer by ID as organizer.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "fec6063d047b0c16f61792d485ff7385",
            "name": "Post Organizers",
            "url": "httpswww.eventbriteapi.com\/v3\/\/organizers\/{id}\/",
            "description": "Updates an organizer and returns it as as organizer.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "organizer.name",
                    "description": "The name of the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.description.html",
                    "description": "The description of the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.long_description.html",
                    "description": "The long description of the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.logo.id",
                    "description": "The logo id of the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.website",
                    "description": "The website for the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.twitter",
                    "description": "The Twitter handle for the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.facebook",
                    "description": "The Facebook URL ID for the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer.instagram",
                    "description": "The Instagram numeric ID for the organizer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "3138eeb5b3d00724c5c0711754e2b0a9",
            "name": "Get Organizers Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/organizers\/{id}\/events\/",
            "description": "Gets events of the organizer.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "status",
                    "description": "Filter to active (attending), inactive (not attending), all (both) orders and all_not_deleted (active and inactive but not deleted) (Valid choices are: active, inactive, all, or all_not_deleted)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_by",
                    "description": "How to order the results (Valid choices are: start_asc, start_desc, created_asc, or created_desc)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start_date.range_start",
                    "description": "Only return events with start dates after the given date.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start_date.range_end",
                    "description": "Only return events with start dates before the given date.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "only_public",
                    "description": "Only show public events even if viewing your own events.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "33ba87c97ea9b6f7fb13cbc01c596a8d",
            "name": "Get Pricing Fee Rates",
            "url": "httpswww.eventbriteapi.com\/v3\/\/pricing\/fee_rates\/",
            "description": "Returns a list of fee_rate objects for the different\ncurrencies, countries, assortments and sales channels we sell through\ntoday and in the future.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "country",
                    "description": "Expected methods for Country",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency",
                    "description": "Expected methods for Currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "plan",
                    "description": "The assortment package name to get the price for. One of [&#8216;any&#8217;, &#8216;package1&#8217;, &#8216;package2&#8217;].If it&#8217;s not provided, or the value is &#8216;any&#8217;, all the existing variants will be returned.&#8217;",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "payment_type",
                    "description": "The payment type to get the price for. One of [&#8216;any&#8217;, &#8216;eventbrite&#8217;, &#8216;authnet&#8217;, &#8216;moneris&#8217;, &#8216;paypal&#8217;, &#8216;google&#8217;, &#8216;manual&#8217;, &#8216;free&#8217;, &#8216;offline&#8217;, &#8216;cash&#8217;, &#8216;check&#8217;, &#8216;invoice&#8217;]. If it&#8217;s not provided, or the value is &#8216;any&#8217;, all the existing  variants will be returned.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "channel",
                    "description": "The sales channel. One of [&#8216;any&#8217;, &#8216;atd&#8217;, &#8216;web&#8217;].  If it&#8217;s not provided, or the value is &#8216;any&#8217;, all the existing variants will be returned.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "item_type",
                    "description": "The item type for which get the price fee rates. One of [&#8216;any&#8217;, &#8216;ticket&#8217;, &#8216;product&#8217;]. If it&#8217;s not provided, or  the value is &#8216;any&#8217;, all the existing variants will be returned.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "1c638dbcd6430d45040d55059a2a7d73",
            "name": "Get Refund Requests",
            "url": "httpswww.eventbriteapi.com\/v3\/\/refund_requests\/{id}\/",
            "description": "Gets a refund-request for the specified refund request.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "6cff5bf60f704e93f1efcc5dbd07e672",
            "name": "Post Refund Requests",
            "url": "httpswww.eventbriteapi.com\/v3\/\/refund_requests\/{id}\/",
            "description": "Update a refund-request for a specific order. Each element in items is a refund-item",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "from_email",
                    "description": "The email of the person is making the request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "from_name",
                    "description": "The name of the person is making the request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "items",
                    "description": "A list of items formatted as: [{&#8220;order_id&#8221;: &#8220;123&#8221;},...]",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "message",
                    "description": "The Message of the request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reason",
                    "description": "The reason of the request (Valid choices are: duplicate_order, event_cancelled, event_not_as_described, no_longer_able_to_attend, event_postponed, request_not_within_event_refund_policy, request_inaccurate, refunded_offline, or alternate_resolution_offered)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "5b0aa7410787a8acb2c44cb0ae768495",
            "name": "Post Refund Requests",
            "url": "httpswww.eventbriteapi.com\/v3\/\/refund_requests\/",
            "description": "Creates a refund-request for a specific order. Each element in items is a refund-item",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "from_email",
                    "description": "The email of the person is making the request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "from_name",
                    "description": "The name of the person is making the request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "items",
                    "description": "A list of items formatted as: [{&#8220;order_id&#8221;: &#8220;123&#8221;},...]",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "message",
                    "description": "The Message of the request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reason",
                    "description": "The reason of the request (Valid choices are: duplicate_order, event_cancelled, event_not_as_described, no_longer_able_to_attend, event_postponed, request_not_within_event_refund_policy, request_inaccurate, refunded_offline, or alternate_resolution_offered)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "a0da1476e4f5d1732731d3271a5af27b",
            "name": "Get Reports Sales",
            "url": "httpswww.eventbriteapi.com\/v3\/\/reports\/sales\/",
            "description": "Returns a response of the aggregate sales data.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "event_ids",
                    "description": "List of public event IDs to report on",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event_status",
                    "description": "Event status to filter down results by (Valid choices are: all, live, or ended)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start_date",
                    "description": "The start time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "end_date",
                    "description": "The end time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "period",
                    "description": "Time period to provide aggregation for in units of the selected date_facet. For example, if date_facet=hour, then period=3 returns 3 hours worth of data from the current time in the event timezone. Day is the default choice if no date_facet.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter_by",
                    "description": "Optional filters for sales\/attendees data formatted as: {&#8220;ticket_ids&#8221;: [1234, 5678], &#8220;currencies&#8221;: [&#8220;USD&#8221;],...}NOTE: currently only filter_by ticket_ids and one currency are supported.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_by",
                    "description": "Optional field to group data on (Valid choices are: payment_method, payment_method_application, ticket, ticket_application, currency, event_currency, reserved_section, event, event_ticket, event_application, country, city, state, source, zone, location, access_level, device_name, sales_channel_lvl_1, sales_channel_lvl_2, or sales_channel_lvl_3)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_facet",
                    "description": "Optional date aggregation level to return data for. Day is the default choice. Monthly aggregation is represented by the first of the month. Weekly aggregation is represented by the ending Sunday of the week, where a week is defined as Monday-Sunday. (Valid choices are: fifteen, hour, day, event_day, week, month, year, or none)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "timezone",
                    "description": "timezone for the new event (Olson format)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "a98ab29788b726d49483c1481b8a9e87",
            "name": "Get Reports Attendees",
            "url": "httpswww.eventbriteapi.com\/v3\/\/reports\/attendees\/",
            "description": "Returns a response of the aggregate attendees data.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "event_ids",
                    "description": "List of public event IDs to report on",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event_status",
                    "description": "Event status to filter down results by (Valid choices are: all, live, or ended)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start_date",
                    "description": "The start time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "end_date",
                    "description": "The end time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "period",
                    "description": "Time period to provide aggregation for in units of the selected date_facet. For example, if date_facet=hour, then period=3 returns 3 hours worth of data from the current time in the event timezone. Day is the default choice if no date_facet.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter_by",
                    "description": "Optional filters for sales\/attendees data formatted as: {&#8220;ticket_ids&#8221;: [1234, 5678], &#8220;currencies&#8221;: [&#8220;USD&#8221;],...}NOTE: currently only filter_by ticket_ids and one currency are supported.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_by",
                    "description": "Optional field to group data on (Valid choices are: payment_method, payment_method_application, ticket, ticket_application, currency, event_currency, reserved_section, event, event_ticket, event_application, country, city, state, source, zone, location, access_level, device_name, sales_channel_lvl_1, sales_channel_lvl_2, or sales_channel_lvl_3)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_facet",
                    "description": "Optional date aggregation level to return data for. Day is the default choice. Monthly aggregation is represented by the first of the month. Weekly aggregation is represented by the ending Sunday of the week, where a week is defined as Monday-Sunday. (Valid choices are: fifteen, hour, day, event_day, week, month, year, or none)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "timezone",
                    "description": "timezone for the new event (Olson format)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "9ce2db77e203bebd55d05f87559a682b",
            "name": "Get System Timezones",
            "url": "httpswww.eventbriteapi.com\/v3\/\/system\/timezones\/",
            "description": "Returns a paginated response with a key of timezones,\ncontaining a list of timezones.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "0a0d789442512b1cc5ddb6c557e4966e",
            "name": "Get System Regions",
            "url": "httpswww.eventbriteapi.com\/v3\/\/system\/regions\/",
            "description": "Returns a single page response with a key of regions,\ncontaining a list of regions.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "a8982d91925b094800f710e9693e2dbd",
            "name": "Get System Countries",
            "url": "httpswww.eventbriteapi.com\/v3\/\/system\/countries\/",
            "description": "Returns a single page response with a key of countries,\ncontaining a list of countries.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "e15c9e942e74efe66f1dd406e585da6b",
            "name": "Get Ticket Groups Ticket Group",
            "url": "httpswww.eventbriteapi.com\/v3\/\/ticket_groups\/:ticket_group_id\/",
            "description": "Returns the ticket_group with the specified :ticket_group_id.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "02cbf4fcdda103b05a320e3b670cd451",
            "name": "Delete Ticket Groups Ticket Group",
            "url": "httpswww.eventbriteapi.com\/v3\/\/ticket_groups\/:ticket_group_id\/",
            "description": "Deletes the ticket_group with the specified :ticket_group_id.\nThe status of the ticket group is changed to deleted.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "6aecdb338189dfaee731e371cd4f32fd",
            "name": "Post Ticket Groups Ticket Group",
            "url": "httpswww.eventbriteapi.com\/v3\/\/ticket_groups\/:ticket_group_id\/",
            "description": "Updates the ticket group with the specified :ticket_group_id. Returns the updated ticket_group.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ticket_group.name",
                    "description": "Name of ticket group.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_group.status",
                    "description": "The status of ticket group. Valid choices are: live, deleted, or archived.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_group.event_ticket_ids",
                    "description": "(&#8216;IDs of tickets by event id for this ticket group. In the format &#8220;{&#8220;event_id&#8221;: [&#8220;ticket_class_id&#8221;, &#8220;ticket_class_id&#8221;]}&#8221;.&#8217;,)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "c0c36cdd19b3ff71e4912107448da38b",
            "name": "Post Ticket Groups",
            "url": "httpswww.eventbriteapi.com\/v3\/\/ticket_groups\/",
            "description": "Creates a ticket group and returns the created ticket_group.\nOnly up to 200 live ticket groups may be created; those with archived or deleted status are not taken into account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ticket_group.name",
                    "description": "Name of ticket group.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_group.status",
                    "description": "The status of ticket group. Valid choices are: live, deleted, or archived.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_group.event_ticket_ids",
                    "description": "(&#8216;IDs of tickets by event id for this ticket group. In the format &#8220;{&#8220;event_id&#8221;: [&#8220;ticket_class_id&#8221;, &#8220;ticket_class_id&#8221;]}&#8221;.&#8217;,)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "918349ae2fdae555adcc50a28f5f24dc",
            "name": "Post Tracking Beacons",
            "url": "httpswww.eventbriteapi.com\/v3\/\/tracking_beacons\/",
            "description": "Makes a new tracking beacon. Returns an tracking_beacon as tracking_beacon. Either event_id or user_id is required for each tracking beacon. If the event_id is provided, the tracking pixel will fire only for that event. If the user_id is provided, the tracking pixel will fire for all events organized by that user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "tracking_type",
                    "description": "The tracking pixel third party type. Allowed types are: Facebook Pixel, Twitter Ads, AdWords, Google Analytics, Simple Image Pixel, Adroll iPixel",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event_id",
                    "description": "The Event ID of the event that this tracking beacon will fire in",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "user_id",
                    "description": "The User ID wherein the tracking beacon will be assigned to all of this user&#8217;s events",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "pixel_id",
                    "description": "The Pixel ID given by the third party that will fire when a attendee lands on the page you are tracking",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "triggers",
                    "description": "The additional pixel data needed to determine which page to fire the tracking pixel on",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "ea2ff98108d04e89a39ca3781ac87489",
            "name": "Get Tracking Beacons Tracking Beacons",
            "url": "httpswww.eventbriteapi.com\/v3\/\/tracking_beacons\/:tracking_beacons_id\/",
            "description": "Returns the tracking_beacon with the specified :tracking_beacons_id.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "return_fmt",
                    "description": "returned format",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "b00e3caf9fc53f087a33bfb8d3a5b311",
            "name": "Post Tracking Beacons Tracking Beacons",
            "url": "httpswww.eventbriteapi.com\/v3\/\/tracking_beacons\/:tracking_beacons_id\/",
            "description": "Updates the tracking_beacons with the specified :tracking_beacons_id. Though event_id and user_id are not individually required, it is a requirement to have a tracking beacon where either one must exist. Returns an tracking_beacon as tracking_beacon.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "tracking_type",
                    "description": "The tracking pixel third party type. Allowed types are: Facebook Pixel, Twitter Ads, AdWords, Google Analytics, Simple Image Pixel, Adroll iPixel",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event_id",
                    "description": "The Event ID of the event that this tracking beacon will fire in",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "user_id",
                    "description": "The User ID wherein the tracking beacon will be assigned to all of this user&#8217;s events",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "pixel_id",
                    "description": "The Pixel ID given by the third party that will fire when a attendee lands on the page you are tracking",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "triggers",
                    "description": "The additional pixel data needed to determine which page to fire the tracking pixel on",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "7a0ebac57b0a462603a066ed24474abb",
            "name": "Delete Tracking Beacons Tracking Beacons",
            "url": "httpswww.eventbriteapi.com\/v3\/\/tracking_beacons\/:tracking_beacons_id\/",
            "description": "Delete the tracking_beacons with the specified :tracking_beacons_id.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "179f21694cad6b1e5fcd51c192a6ad04",
            "name": "Get Events Event Tracking Beacons",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/:event_id\/tracking_beacons\/",
            "description": "Returns the list of tracking_beacon for the event :event_id",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "return_fmt",
                    "description": "returned format",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "6eb0715c985f32dac055aa7ff9bb9a87",
            "name": "Get Users User Tracking Beacons",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/:user_id\/tracking_beacons\/",
            "description": "Returns the list of tracking_beacon for the user :user_id",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "return_fmt",
                    "description": "returned format",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "b6617f321aed35d303a56b87cebf6b78",
            "name": "Get Users",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/",
            "description": "Returns a user for the specified user as user. If you want to get details about the currently authenticated user, use \/users\/me\/.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "17224b24dff07494bfcbc0c308e53803",
            "name": "Get Users Orders",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/orders\/",
            "description": "Returns a paginated response of orders, under the key orders, of all orders the user has placed (i.e. where the user was the person buying the tickets).",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "&#160;",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "3b6771c17cb6631ccb1192c60d7736c6",
            "name": "Get Users Organizers",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/organizers\/",
            "description": "Returns a paginated response of organizer objects that are owned by the user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "hide_unsaved",
                    "description": "True: Will hide organizers flagged as &#8220;unsaved&#8221;False: Will show organizers regardless of unsaved flag (Default value)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "cd2f24ed0cafc36adc51bf109a9b345a",
            "name": "Get Users Owned Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/owned_events\/",
            "description": "Returns a paginated response of events, under\nthe key events, of all events the user owns (i.e. events they are organising)",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "order_by",
                    "description": "How to order the results (Valid choices are: start_asc, start_desc, created_asc, or created_desc)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "show_series_parent",
                    "description": "True: Will show parent of a serie instead of childrenFalse: Will show children of a serie (Default value)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Filter to active (attending), inactive (not attending), all (both) orders and all_not_deleted (active and inactive but not deleted) (Valid choices are: active, inactive, all, or all_not_deleted)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "67176d5a557695ff96bf39a10e5517bc",
            "name": "Get Users Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/events\/",
            "description": "Returns a paginated response of events, under the key events, of all events the user has access to",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "name_filter",
                    "description": "Filter event results by name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency_filter",
                    "description": "Filter event results by currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_by",
                    "description": "How to order the results (Valid choices are: start_asc, start_desc, created_asc, or created_desc)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "show_series_parent",
                    "description": "True: Will show parent of a serie instead of childrenFalse: Will show children of a serie (Default value)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Filter to active (attending), inactive (not attending), all (both) orders and all_not_deleted (active and inactive but not deleted) (Valid choices are: active, inactive, all, or all_not_deleted)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event_group_id",
                    "description": "Filter event results by event_group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "page_size",
                    "description": "Number of records in each page.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "time_filter",
                    "description": "Limits results to either past or current &amp; future events \/ orders. (Valid choices are: all, past, or current_future)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue_filter",
                    "description": "Filter event results by venue IDs",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "71c8fb148366468938070433504ce6cc",
            "name": "Post Organizations Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/organizations\/{id}\/events\/",
            "description": "Creates new events objects under an organization and returns it as event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "event.name.html",
                    "description": "The name of the event. Value cannot be empty nor whitespace.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.description.html",
                    "description": "The description on the event page",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.organizer_id",
                    "description": "The ID of the organizer of this event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.start.utc",
                    "description": "The start time of the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.start.timezone",
                    "description": "Start time timezone (Olson format)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.end.utc",
                    "description": "The end time of the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.end.timezone",
                    "description": "End time timezone (Olson format)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.hide_start_date",
                    "description": "Whether the start date should be hidden",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.hide_end_date",
                    "description": "Whether the end date should be hidden",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.currency",
                    "description": "Event currency (3 letter code)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.venue_id",
                    "description": "The ID of a previously-created venue to associate with this event. You can omit this field or set it to null if you set online_event.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.online_event",
                    "description": "Is the event online-only (no venue)?",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.listed",
                    "description": "If the event is publicly listed and searchable. Defaults to True.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.logo.id",
                    "description": "(Deprecated) The logo for the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.logo_id",
                    "description": "The logo for the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.category_id",
                    "description": "The category (vertical) of the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.subcategory_id",
                    "description": "The subcategory of the event (US only)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.format_id",
                    "description": "The format (general type) of the event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.shareable",
                    "description": "If users can share the event on social media",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.invite_only",
                    "description": "Only invited users can see the event page",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.password",
                    "description": "Password needed to see the event in unlisted mode",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.capacity",
                    "description": "Set specific capacity (if omitted, sums ticket capacities)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.show_remaining",
                    "description": "If the remaining number of tickets is publicly visible on the event page",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.is_reserved_seating",
                    "description": "If the event is reserved seating",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.show_pick_a_seat",
                    "description": "For reserved seating event, if attendees can pick their seats.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.show_seatmap_thumbnail",
                    "description": "For reserved seating event, if venue map thumbnail visible on the event page.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event.source",
                    "description": "Source of the event (defaults to API)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "070215b6309b7f677918f8d593ac929f",
            "name": "Get Users Venues",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/venues\/",
            "description": "Returns a paginated response of venue objects that are owned by the user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "59a8cd88b464b33d5068dc7ce30977ac",
            "name": "Post Organizations Venues",
            "url": "httpswww.eventbriteapi.com\/v3\/\/organizations\/{id}\/venues\/",
            "description": "Creates new venue objects under an organization and returns it as venue.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "venue.name",
                    "description": "The name of the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.google_place_id",
                    "description": "The google place id for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.organizer_id",
                    "description": "The organizer this venue belongs to (optional - leave this off to use the default organizer)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.address_1",
                    "description": "The first line of the address",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.address_2",
                    "description": "The second line of the address",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.city",
                    "description": "The city where the venue is",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.region",
                    "description": "The region where the venue is",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.postal_code",
                    "description": "The postal_code where the venue is",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.country",
                    "description": "The country where the venue is",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.latitude",
                    "description": "The latitude of the coordinates for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.longitude",
                    "description": "The longitude of the coordinates for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.age_restriction",
                    "description": "The age restrictions for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.capacity",
                    "description": "The max capacity for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "a2fdedf4bba94ea653536c7c1d61ca66",
            "name": "Get Users Owned Event Attendees",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/owned_event_attendees\/",
            "description": "Returns a paginated response of attendees,\nunder the key attendees, of attendees visiting any of the events the user owns\n(events that would be returned from \/users\/:id\/owned_events\/)",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "status",
                    "description": "Filter to active (attending), inactive (not attending), all (both) orders and all_not_deleted (active and inactive but not deleted) (Valid choices are: active, inactive, all, or all_not_deleted)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "changed_since",
                    "description": "Only return orders changed on or after the time given",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "dea185360b58a46c4709bfd44d2ff15a",
            "name": "Get Users Owned Event Orders",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/owned_event_orders\/",
            "description": "Returns a paginated response of orders,\nunder the key orders, of orders placed against any of the events the user owns\n(events that would be returned from \/users\/:id\/owned_events\/)",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "status",
                    "description": "Filter to active (attending), inactive (not attending), all (both) orders and all_not_deleted (active and inactive but not deleted) (Valid choices are: active, inactive, all, or all_not_deleted)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "only_emails",
                    "description": "Only include orders placed by one of these emails",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude_emails",
                    "description": "Don&#8217;t include orders placed by any of these emails",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "changed_since",
                    "description": "Only return orders changed on or after the time given",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "1fbfd664940864ce2c045f3946791bfc",
            "name": "Get Users Contact Lists",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/contact_lists\/",
            "description": "Returns a list of contact_list that the user owns as the key\ncontact_lists.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "1d9d93bba2323aac4f1d0180b3ec7482",
            "name": "Post Users Contact Lists",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/contact_lists\/",
            "description": "Makes a new contact_list for the user and returns it as\ncontact_list.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "contact_list.name",
                    "description": "Name of the new contact list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "5934b0d42188100c21098f44f198ee0f",
            "name": "Get Users Contact Lists Contact List",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/contact_lists\/:contact_list_id\/",
            "description": "Gets a user&#8217;s contact_list by ID as contact_list.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "a96cc66bf7ee8341b10c6d029fbd6bd1",
            "name": "Post Users Contact Lists Contact List",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/contact_lists\/:contact_list_id\/",
            "description": "Updates the contact_list and returns it as contact_list.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "contact_list.name",
                    "description": "Name of the new contact list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "742928c631046afab1a3977e4f3b077d",
            "name": "Delete Users Contact Lists Contact List",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/contact_lists\/:contact_list_id\/",
            "description": "Deletes the contact list. Returns {&quot;deleted&quot;: true}.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "04c81aea18f4ab6441d6bb13fe8705fe",
            "name": "Get Users Contact Lists Contact List Contacts",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/contact_lists\/:contact_list_id\/contacts\/",
            "description": "Returns the contacts on the contact list\nas contacts.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "a4baee9f8958184130430b3b8e1c293a",
            "name": "Post Users Contact Lists Contact List Contacts",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/contact_lists\/:contact_list_id\/contacts\/",
            "description": "Adds a new contact to the contact list. Returns {&quot;created&quot;: true}.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "contact.email",
                    "description": "Contact&#8217;s email address",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "contact.first_name",
                    "description": "Contact&#8217;s first name (or full name)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "contact.last_name",
                    "description": "Contact&#8217;s last name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "26c2d37f8833b460b3785f37205dc02e",
            "name": "Delete Users Contact Lists Contact List Contacts",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/contact_lists\/:contact_list_id\/contacts\/",
            "description": "Deletes the specified contact from the contact list.\nReturns {&quot;deleted&quot;: true}.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "email",
                    "description": "Email address to remove",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "c29fd4f8a97cebc52ecdd6fd37e13d3d",
            "name": "Get Users Bookmarks",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/bookmarks\/",
            "description": "Gets all the user&#8217;s saved events.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "bookmark_list_id",
                    "description": "Optional bookmark list id to fetch all bookmarks from",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "d8cfa73d0d9ccbd5ccda278864f0331e",
            "name": "Post Users Bookmarks Save",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/bookmarks\/save\/",
            "description": "Adds a new bookmark for the user. Returns {&quot;created&quot;: true}.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "event_id",
                    "description": "The Event ID of the event that this tracking beacon will fire in",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event_ids",
                    "description": "List of public event IDs to report on",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bookmark_list_id",
                    "description": "Optional bookmark list id to fetch all bookmarks from",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "0f93b22efb734c97d1f51675d574695d",
            "name": "Post Users Bookmarks Unsave",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/bookmarks\/unsave\/",
            "description": "Removes the specified bookmark from the event for the user. Returns {&quot;deleted&quot;: true}.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "event_id",
                    "description": "The Event ID of the event that this tracking beacon will fire in",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event_ids",
                    "description": "List of public event IDs to report on",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bookmark_list_id",
                    "description": "Optional bookmark list id to fetch all bookmarks from",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "fe9500e105c7f984ae242aca8d35985e",
            "name": "Get Users User Ticket Groups",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/:user_id\/ticket_groups\/",
            "description": "Returns a paginated response of ticket_group for the specified user.\nThe alias me (\/users\/me\/) may be used to refer to the currently authenticated user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "status",
                    "description": "Filter to active (attending), inactive (not attending), all (both) orders and all_not_deleted (active and inactive but not deleted) (Valid choices are: active, inactive, all, or all_not_deleted)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "60a60c2e4e3743414fb1de9163e19d8c",
            "name": "Post Users User Events Event Ticket Classes Ticket Class Ticket Groups",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/:user_id\/events\/:event_id\/ticket_classes\/:ticket_class_id\/ticket_groups\/",
            "description": "Add the Ticket Class with the specified :ticket_class_id of the event with :event_id that\nbelongs to the user with :user_id to many Ticket Groups specified with ticket_group_ids.\nIf the list provided is empty, remove this ticket class from every ticket group.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ticket_group_ids",
                    "description": "IDs of all ticket group this ticket belongs to. If this is not passed will remove all ticket groups from the ticket.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "d73bbd6e2fb737315ef6728f8ccbc790",
            "name": "Get Users User Discounts",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/:user_id\/discounts\/",
            "description": "Returns a paginated response of cross_event_discount for the specified user.\nThis operation is only supported for the currently authenticated user. The alias me (\/users\/me\/) may be used.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "page_size",
                    "description": "Number of records in each page.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_by",
                    "description": "How to order the results (Valid choices are: start_asc, start_desc, created_asc, or created_desc)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "The type of image to upload (Valid choices are: image-event-logo, image-event-logo-preserve-quality, image-event-view-from-seat, image-organizer-logo, image-user-photo, or image-structured-content)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ticket_group_id",
                    "description": "ID of the ticket group.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "scope",
                    "description": "Type of discount scopes. (Valid choices are: event, multi_events, or user)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "code_filter",
                    "description": "Search term to filter discounts by name.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "code",
                    "description": "Search term to find discounts by code\/name, in an exact match behavior.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event_id",
                    "description": "The Event ID of the event that this tracking beacon will fire in",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "f8f4c869b89b4240e66f3585b67b816c",
            "name": "Get Users Assortment",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/assortment\/",
            "description": "Retrieve the assortment for the user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "369b34385f568d13409d1738732992af",
            "name": "Post Users Assortment",
            "url": "httpswww.eventbriteapi.com\/v3\/\/users\/{id}\/assortment\/",
            "description": "Set a user&#8217;s assortment and returns the assortment for the specified\nuser.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "plan",
                    "description": "The assortment package name to get the price for. One of [&#8216;any&#8217;, &#8216;package1&#8217;, &#8216;package2&#8217;].If it&#8217;s not provided, or the value is &#8216;any&#8217;, all the existing variants will be returned.&#8217;",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "cea257bdd675ab0593e2c8b25d9109c6",
            "name": "Get Venues",
            "url": "httpswww.eventbriteapi.com\/v3\/\/venues\/{id}\/",
            "description": "Returns a venue object.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "1b65b4ac16bc98845d0c2263a5fd7d4d",
            "name": "Post Venues",
            "url": "httpswww.eventbriteapi.com\/v3\/\/venues\/{id}\/",
            "description": "Updates a venue and returns it as an object.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "venue.name",
                    "description": "The name of the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.google_place_id",
                    "description": "The google place id for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.organizer_id",
                    "description": "The organizer this venue belongs to (optional - leave this off to use the default organizer)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.address_1",
                    "description": "The first line of the address",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.address_2",
                    "description": "The second line of the address",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.city",
                    "description": "The city where the venue is",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.region",
                    "description": "The region where the venue is",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.postal_code",
                    "description": "The postal_code where the venue is",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.country",
                    "description": "The country where the venue is",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.latitude",
                    "description": "The latitude of the coordinates for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.longitude",
                    "description": "The longitude of the coordinates for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.age_restriction",
                    "description": "The age restrictions for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.capacity",
                    "description": "The max capacity for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "457c52e9ec65481cd7d1882c4b47d4dc",
            "name": "Post Venues",
            "url": "httpswww.eventbriteapi.com\/v3\/\/venues\/",
            "description": "Creates a new venue with associated address.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "venue.name",
                    "description": "The name of the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.google_place_id",
                    "description": "The google place id for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.organizer_id",
                    "description": "The organizer this venue belongs to (optional - leave this off to use the default organizer)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.address_1",
                    "description": "The first line of the address",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.address_2",
                    "description": "The second line of the address",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.city",
                    "description": "The city where the venue is",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.region",
                    "description": "The region where the venue is",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.postal_code",
                    "description": "The postal_code where the venue is",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.country",
                    "description": "The country where the venue is",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.latitude",
                    "description": "The latitude of the coordinates for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.address.longitude",
                    "description": "The longitude of the coordinates for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.age_restriction",
                    "description": "The age restrictions for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue.capacity",
                    "description": "The max capacity for the venue",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "0a87f9e98410f8befee1f89a46b4bf83",
            "name": "Get Venues Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/venues\/{id}\/events\/",
            "description": "Returns events of a given venue.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "status",
                    "description": "Filter to active (attending), inactive (not attending), all (both) orders and all_not_deleted (active and inactive but not deleted) (Valid choices are: active, inactive, all, or all_not_deleted)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_by",
                    "description": "How to order the results (Valid choices are: start_asc, start_desc, created_asc, or created_desc)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start_date.range_start",
                    "description": "Only return events with start dates after the given date.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start_date.range_end",
                    "description": "Only return events with start dates before the given date.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "only_public",
                    "description": "Only show public events even if viewing your own events.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "0e316c7e9bf990b42663f30d32338438",
            "name": "Get Webhooks",
            "url": "httpswww.eventbriteapi.com\/v3\/\/webhooks\/{id}\/",
            "description": "Returns a webhook for the specified webhook as webhook.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "b6b29dd9115a2b571fee71bc0939bbf5",
            "name": "Delete Webhooks",
            "url": "httpswww.eventbriteapi.com\/v3\/\/webhooks\/{id}\/",
            "description": "Deletes the specified webhook object.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "ac22ae7ba8a9898d406a4aacb2c20b3c",
            "name": "Get Webhooks",
            "url": "httpswww.eventbriteapi.com\/v3\/\/webhooks\/",
            "description": "Returns the list of webhook objects that belong to the authenticated user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "4b2e80554be60b1410f755485958d474",
            "name": "Post Webhooks",
            "url": "httpswww.eventbriteapi.com\/v3\/\/webhooks\/",
            "description": "Creates a webhook for the authenticated user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "endpoint_url",
                    "description": "The target URL of the Webhook subscription.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "actions",
                    "description": "Determines what actions will trigger the webhook.If no value is sent for this param, it selects order.placed, event.published, and event.unpublished by default.See below for a more complete description of all available actions.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event_id",
                    "description": "The Event ID of the event that this tracking beacon will fire in",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "0b9c4ce79e82d766b49355b8f15e580f",
            "name": "Post Series",
            "url": "httpswww.eventbriteapi.com\/v3\/\/series\/",
            "description": "Creates a new repeating event series. The POST data must include information for at least one event date in the series.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "96e3d8adf1aabc5e8635ccd2ae72b9d0",
            "name": "Get Series",
            "url": "httpswww.eventbriteapi.com\/v3\/\/series\/{id}\/",
            "description": "Returns a repeating event series parent object for the specified repeating event series.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "tracking_code",
                    "description": "Append the given tracking_code to the event URLs returned.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "8e9f2679a394f9c46bef4669367eeda2",
            "name": "Post Series",
            "url": "httpswww.eventbriteapi.com\/v3\/\/series\/{id}\/",
            "description": "Updates a repeating event series parent object, and optionally also creates more event dates or updates or deletes\nexisting event dates in the series. In order for a series date to be deleted or updated, there must be no pending or\ncompleted orders for that date.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "a00b3e462034a7443b39a1d0d763a783",
            "name": "Delete Series",
            "url": "httpswww.eventbriteapi.com\/v3\/\/series\/{id}\/",
            "description": "Deletes a repeating event series and all of its occurrences if the delete is permitted. In order for a delete to be\npermitted, there must be no pending or completed orders for any dates in the series. Returns a boolean indicating\nsuccess or failure of the delete.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "243ffc616cc02e147e01d01b85551f1b",
            "name": "Post Series Publish",
            "url": "httpswww.eventbriteapi.com\/v3\/\/series\/{id}\/publish\/",
            "description": "Publishes a repeating event series and all of its occurrences that are not already canceled or deleted. Once a date is cancelled it can still be uncancelled and can be viewed by the public. A deleted date cannot be undeleted and cannot by viewed by the public. In order for\npublish to be permitted, the event must have all necessary information, including a name and description, an organizer,\nat least one ticket, and valid payment options. This API endpoint will return argument errors for event fi",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "0b017b8654c2e7b67dd6640b964fd0ed",
            "name": "Post Series Unpublish",
            "url": "httpswww.eventbriteapi.com\/v3\/\/series\/{id}\/unpublish\/",
            "description": "Unpublishes a repeating event series and all of its occurrences that are not already completed, canceled, or deleted. In\norder for a free series to be unpublished, it must not have any pending or completed orders for any dates, even past\ndates. In order for a paid series to be unpublished, it must not have any pending or completed orders for any dates,\nexcept that completed orders for past dates that have been completed and paid out do not prevent an unpublish. Returns\na boolean indicating succe",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "1b181b9adf9ed9c92b81306fb1e715d5",
            "name": "Post Series Cancel",
            "url": "httpswww.eventbriteapi.com\/v3\/\/series\/{id}\/cancel\/",
            "description": "Cancels a repeating event series and all of its occurrences that are not already canceled or deleted. In order for\ncancel to be permitted, there must be no pending or completed orders for any dates in the series. Returns a boolean\nindicating success or failure of the cancel.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "b12113fcaf5180d5292072d67dee44f4",
            "name": "Get Series Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/series\/{id}\/events\/",
            "description": "Returns all of the events that belong to this repeating event series.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "time_filter",
                    "description": "Limits results to either past or current &amp; future events \/ orders. (Valid choices are: all, past, or current_future)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tracking_code",
                    "description": "Append the given tracking_code to the event URLs returned.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_by",
                    "description": "How to order the results (Valid choices are: start_asc, start_desc, created_asc, or created_desc)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "5bf1b5ca983e071d08205f975ada4b8d",
            "name": "Post Series Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/series\/{id}\/events\/",
            "description": "Creates more event dates or updates or deletes existing event dates in a repeating event series. In order for a series\ndate to be deleted or updated, there must be no pending or completed orders for that date.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "431315c78a3cd748a1ce91b849e81ba7",
            "name": "Event Search",
            "url": "httpswww.eventbriteapi.com\/v3\/\/events\/search\/",
            "description": "This method uses our search index to find publicly listed events.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "keywords",
                    "description": "The search keywords. To run an OR search, you need this format: ???keywords=google%20OR%20multimedia???. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category",
                    "description": "Event categories (comma seperated): conference, conventions, entertainment, fundraisers, meetings, other, performances, reunions, sales, seminars, social, sports, tradeshows, travel, religion, fairs, food, music, recreation. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "address",
                    "description": "The venue address. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "city",
                    "description": "The venue city. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "region",
                    "description": "The venue state\/province\/county\/territory depending on the country. 2-letter state code is required for US addresses. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "postal_code",
                    "description": "The postal\/zip code of the venue. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "country",
                    "description": "Expected methods for Country",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "within",
                    "description": "If ???within??? is set and the ???city??? or ???zipcode??? resolve to a specific geolocation, the search will be restricted to the specified within radius. The sorting default will be set to ???distance???. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "within_unit",
                    "description": "If within is set, you can specify the unit to use: ???M??? for miles, or ???K??? for kilometers. By default, the API will use miles. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "latitude",
                    "description": "If ???within??? is set you can limit your search to wgs84 coordinates (latitude, longitude). Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "longitude",
                    "description": "If ???within??? is set you can limit your search to wgs84 coordinates (latitude, longitude). Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date",
                    "description": "The event start date. Limit the list of results to a date range, specified by a label or by exact dates. Currently supported labels include: ???All???, ???Future???, ???Past???, ???Today???, ???Yesterday???, ???Last Week???, ???This Week???, ???Next week???, ???This Month???, ???Next Month??? and months by name, e.g. ???October???. Exact date ranges take the form ???YYYY-MM-DD YYYY-MM-DD???, e.g. ???2008-04-25 2008-04-27???. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_created",
                    "description": "The date range the event was created, specified by a label or by exact dates. Currently supported labels include: ???All???, ???Future???, ???Past???, ???Today???, ???Yesterday???, ???Last Week???, ???This Week???, ???Next week???, ???This Month???, ???Next Month??? and months by name, e.g. ???October???. Exact date ranges take the form ???YYYY-MM-DD YYYY-MM-DD???, e.g. ???2008-04-25 2008-04-27???. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_modified",
                    "description": "The date range the event was modified, specified by a label or by exact dates. Currently supported labels include: ???All???, ???Future???, ???Past???, ???Today???, ???Yesterday???, ???Last Week???, ???This Week???, ???Next week???, ???This Month???, ???Next Month??? and months by name, e.g. ???October???. Exact date ranges take the form ???YYYY-MM-DD YYYY-MM-DD???, e.g. ???2008-04-25 2008-04-27???. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer",
                    "description": "The organizer name. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "max",
                    "description": "Limit the number of events returned. Maximum limit is 100 events per page. Default is 10. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count_only",
                    "description": "Only return the total number of events (???true??? or ???false???). Default is ???false???. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_by",
                    "description": "Sort the list of events by ???id???, ???date???, ???name???, ???city???. The default is ???date???. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "page",
                    "description": "Allows for paging through the results of a query. Default is 1. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "since_id",
                    "description": "Returns events with id greater than ???since_id??? value. Default is 1. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tracking_link",
                    "description": "The tracking link code to add to the event URLs. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "q",
                    "description": "The query.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "fe6abaa22db3d79d6b2140ff90340cee",
            "name": "Get Event Get",
            "url": "httpswww.eventbriteapi.com\/v3\/\/event_get",
            "description": "This method returns the data for a given event. Only public events are viewable if no authentication is passed.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "event_id",
                    "description": "The Event ID of the event that this tracking beacon will fire in",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "4d9083040ae6dfb7cec53e093134ace0",
            "name": "Get Event New",
            "url": "httpswww.eventbriteapi.com\/v3\/\/event_new",
            "description": "This method creates a new event. It returns the ID of the newly created event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "title",
                    "description": "The event title. 255 characters max.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The event description. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start_date",
                    "description": "The start time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "end_date",
                    "description": "The end time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "timezone",
                    "description": "timezone for the new event (Olson format)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "privacy",
                    "description": "0 for a private event, 1 for a public event. If not provided, will default to 0. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "personalized_url",
                    "description": "The event registration URL. If you pass ???testevent???, the event will be accessible at ???http:\/\/testevent.eventbrite.com???.    This string is limited to 255 characters max. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue_id",
                    "description": "The event venue ID. The venue must have been previously created using \/venue_new. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer_id",
                    "description": "The event organizer ID. The organizer must have been previously created using \/organizer_new. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "capacity",
                    "description": "The maximum number of people who can attend the event. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency",
                    "description": "Expected methods for Currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Filter to active (attending), inactive (not attending), all (both) orders and all_not_deleted (active and inactive but not deleted) (Valid choices are: active, inactive, all, or all_not_deleted)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "custom_header",
                    "description": "Custom HTML header for your registration page. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "custom_footer",
                    "description": "Custom HTML footer for your registration page. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "background_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "text_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "title_text_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "box_background_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "box_text_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "box_border_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "box_header_background_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "box_header_text_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "28ac67a0aa7cea8e9caef3217b7c8d1a",
            "name": "Get Event Update",
            "url": "httpswww.eventbriteapi.com\/v3\/\/event_update",
            "description": "This method updates an existing event. Only the fields passed as arguments will be modified. This method returns the ID of the modified event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "event_id",
                    "description": "The Event ID of the event that this tracking beacon will fire in",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "title",
                    "description": "The event title. 255 characters max.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The event description. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start_date",
                    "description": "The start time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "end_date",
                    "description": "The end time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "timezone",
                    "description": "timezone for the new event (Olson format)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "privacy",
                    "description": "0 for a private event, 1 for a public event. If not provided, will default to 0. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "personalized_url",
                    "description": "The event registration URL. If you pass ???testevent???, the event will be accessible at ???http:\/\/testevent.eventbrite.com???.    This string is limited to 255 characters max. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue_id",
                    "description": "The event venue ID. The venue must have been previously created using \/venue_new. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "organizer_id",
                    "description": "The event organizer ID. The organizer must have been previously created using \/organizer_new. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "capacity",
                    "description": "The maximum number of people who can attend the event. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency",
                    "description": "Expected methods for Currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Filter to active (attending), inactive (not attending), all (both) orders and all_not_deleted (active and inactive but not deleted) (Valid choices are: active, inactive, all, or all_not_deleted)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "custom_header",
                    "description": "Custom HTML header for your registration page. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "custom_footer",
                    "description": "Custom HTML footer for your registration page. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "background_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "text_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "title_text_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "box_background_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "box_text_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "box_border_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "box_header_background_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "box_header_text_color",
                    "description": "Custom hexadecimal color for your registration page. Format: FFFFFF *without* the pound. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "ad72cb8a985405450fb0dc3358f8b25a",
            "name": "Get Event Copy",
            "url": "httpswww.eventbriteapi.com\/v3\/\/event_copy",
            "description": "This method duplicates an existing event, returning the ID of the new event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "event_id",
                    "description": "The Event ID of the event that this tracking beacon will fire in",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event_name",
                    "description": "A new name for this copy of the Event.    255 character limit.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "4e0b73e35691f60b58bebb1fde5d1bba",
            "name": "Get User List Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/user_list_events",
            "description": "This method lists the events created by this user. Only public events are returned if no authentication is passed.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "email",
                    "description": "Email address to remove",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "do_not_display",
                    "description": "Comma separated list without spaces. Valid options include: description, venue, logo, style, organizer, tickets. Example: \"do_not_display=venue,logo,style\". If you leave this field blank, it will return everything. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event_statuses",
                    "description": "Comma separated list without spaces. Valid options include: live, started, ended. Example: \"event_statuses=live,started\". If you leave this field blank, it will return everything. Also note that the ???ended??? option will only return events that have ended in the last 7 days. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "asc_or_desc",
                    "description": "Valid options include ???asc??? or results in ascending order or ???desc??? or descending order based on event start_date. Defaults to asc. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "ed892b1dd0af775efdaf696167b2ae83",
            "name": "Get Ticket New",
            "url": "httpswww.eventbriteapi.com\/v3\/\/ticket_new",
            "description": "This method creates new fixed-price or donation ticket types. It returns the ID of the newly created ticket.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "event_id",
                    "description": "The Event ID of the event that this tracking beacon will fire in",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_donation",
                    "description": "0 for fixed-price tickets, 1 for donations. 0 will be used by default if not provided. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "The name of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The event description. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "The ticket price. Enter 0.00 for free tickets. Leave blank for a donation.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "The number of tickets available. Not required for donations.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start_sales",
                    "description": "The date and time when ticket sales start, in ISO 8601 format (e.g., ???2007-12-31 23:59:59???). Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "end_sales",
                    "description": "The date and time when ticket sales stop, in ISO 8601 format (e.g., ???2007-12-31 23:59:59???). Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "include_fee",
                    "description": "0 to add the Eventbrite service fee on top of ticket price, or 1 to include it in the ticket price. 0 will be used by default if not provided. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "min",
                    "description": "The minimum number of tickets per order. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "max",
                    "description": "Limit the number of events returned. Maximum limit is 100 events per page. Default is 10. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "e81c74699617e7513a6073f05d1baf89",
            "name": "Get Ticket Update",
            "url": "httpswww.eventbriteapi.com\/v3\/\/ticket_update",
            "description": "This method updates an existing ticket type. Only the fields passed as arguments will be modified. It returns the ID of the updated ticket.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "The ticket ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_donation",
                    "description": "0 for fixed-price tickets, 1 for donations. 0 will be used by default if not provided. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "The name of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The event description. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "The ticket price. Enter 0.00 for free tickets. Leave blank for a donation.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "The number of tickets available. Not required for donations.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start_sales",
                    "description": "The date and time when ticket sales start, in ISO 8601 format (e.g., ???2007-12-31 23:59:59???). Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "end_sales",
                    "description": "The date and time when ticket sales stop, in ISO 8601 format (e.g., ???2007-12-31 23:59:59???). Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "include_fee",
                    "description": "0 to add the Eventbrite service fee on top of ticket price, or 1 to include it in the ticket price. 0 will be used by default if not provided. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "min",
                    "description": "The minimum number of tickets per order. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "max",
                    "description": "Limit the number of events returned. Maximum limit is 100 events per page. Default is 10. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hide",
                    "description": "Show or hide the ticket type. Valid options: (y or n)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "b9757de964fd3d38968c938069650913",
            "name": "Get Event List Attendees",
            "url": "httpswww.eventbriteapi.com\/v3\/\/event_list_attendees",
            "description": "This method returns a list of attendees for a given event. If no authentication is passed, only publicly available attendee records will be returned.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "event_id",
                    "description": "The Event ID of the event that this tracking beacon will fire in",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "Limit the number of attendees returned. Default limit is 50 attendees per page if paginate selected.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "page",
                    "description": "Allows for paging through the results of a query. Default is 1. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "do_not_display",
                    "description": "Comma separated list without spaces. Valid options include: description, venue, logo, style, organizer, tickets. Example: \"do_not_display=venue,logo,style\". If you leave this field blank, it will return everything. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "show_full_barcodes",
                    "description": "If set to ???true???, it will return all barcodes associates with the attendee, plus the barcode status, device used, attendee_id, and barcode number. If left blank, it will return a comma separated list of barcodes. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "f70b4c0f31eed77e4df2b659a58f85ae",
            "name": "Get Venue Get",
            "url": "httpswww.eventbriteapi.com\/v3\/\/venue_get",
            "description": "This method returns a single venue by id.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "The ticket ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "973bab8d173f2251daa0b65680c3e5c0",
            "name": "Get Venue New",
            "url": "httpswww.eventbriteapi.com\/v3\/\/venue_new",
            "description": "This method creates a new venue. It returns the ID of the newly created venue.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "organizer_id",
                    "description": "The event organizer ID. The organizer must have been previously created using \/organizer_new. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue",
                    "description": "The venue name.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "adress",
                    "description": "The venue address (line 1). Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "adress_2",
                    "description": "The venue address (line 2). Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "city",
                    "description": "The venue city. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "region",
                    "description": "The venue state\/province\/county\/territory depending on the country. 2-letter state code is required for US addresses. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "postal_code",
                    "description": "The postal\/zip code of the venue. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "country_code",
                    "description": "2-letter country code, according to the ISO 3166 format.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "cebe0ae35211d624884a143c11b92ab9",
            "name": "Get Venue Update",
            "url": "httpswww.eventbriteapi.com\/v3\/\/venue_update",
            "description": "This method updates an existing venue. Only the fields passed as arguments will be modified. It returns the ID of the updated venue.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "The ticket ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "venue",
                    "description": "The venue name.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "adress",
                    "description": "The venue address (line 1). Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "adress_2",
                    "description": "The venue address (line 2). Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "city",
                    "description": "The venue city. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "region",
                    "description": "The venue state\/province\/county\/territory depending on the country. 2-letter state code is required for US addresses. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "postal_code",
                    "description": "The postal\/zip code of the venue. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "country_code",
                    "description": "2-letter country code, according to the ISO 3166 format.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "1423c785b98497851675a5259908160c",
            "name": "Get User List Venues",
            "url": "httpswww.eventbriteapi.com\/v3\/\/user_list_venues",
            "description": "This method lists the venues created by this user. Requires authentication.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "0b1c6cd7756ab51f9dcdec7a7e940152",
            "name": "Get Organizer List Events",
            "url": "httpswww.eventbriteapi.com\/v3\/\/organizer_list_events",
            "description": "This method returns a list of events for a given organizer.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "The ticket ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "c6cf07d61473d25c1206a1d6399c9650",
            "name": "Get Organizer Get",
            "url": "httpswww.eventbriteapi.com\/v3\/\/organizer_get",
            "description": "This method returns a single organizer by id.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "The ticket ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "478ef55759a5a72ab5cd01a031db2538",
            "name": "Get Organizer New",
            "url": "httpswww.eventbriteapi.com\/v3\/\/organizer_new",
            "description": "Many event creators prefer having a specific person identified as the point of contact for their event. This person is usually someone like the event emcee, or an on-site contact that can help with attendee check-ins or other issues during the event. This method creates a new organizer, and returns the organizer_id for the newly created resource.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "name",
                    "description": "The name of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The event description. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "5980013e2571d5c2e8b326870cfdb9b9",
            "name": "Get Organizer Update",
            "url": "httpswww.eventbriteapi.com\/v3\/\/organizer_update",
            "description": "This method updates an existing organizer. Only the fields passed as arguments will be modified. It returns the ID of the updated organizer.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "The ticket ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "The name of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The event description. Optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "bdfaa9b3251b481cef8d8798a689d689",
            "name": "Get User List Organizers",
            "url": "httpswww.eventbriteapi.com\/v3\/\/user_list_organizers",
            "description": "This method lists the organizers created by this user. Requires authentication.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "bc09ac360d01b37b181dd465e5b2163d",
            "name": "Get User List Tickets",
            "url": "httpswww.eventbriteapi.com\/v3\/\/user_list_tickets",
            "description": "This method lists the tickets purchased by the authenticated user. Each transaction is an order in our system and an order may contain one or more tickets. Tickets to free events are included.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "0c115ddc366ef51c122c2e31a5c9a491",
            "name": "Get User Get",
            "url": "httpswww.eventbriteapi.com\/v3\/\/user_get",
            "description": "This method returns the user account identified by the user_id or email request parameters. Visibility is limited to users and sub-users of the given user_key.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "user_id",
                    "description": "The User ID wherein the tracking beacon will be assigned to all of this user&#8217;s events",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "Email address to remove",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "6a2c4ab03e5f0cb8bd3eef4a7e409c2f",
            "name": "Get User New",
            "url": "httpswww.eventbriteapi.com\/v3\/\/user_new",
            "description": "This method creates a new user, returning the user???s ID in the response.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "email",
                    "description": "Email address to remove",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "passwd",
                    "description": "The user password. (needs to be at least 4 characters long).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "2d6f32616a32d75276757fbff8c4eb32",
            "name": "Get User Update",
            "url": "httpswww.eventbriteapi.com\/v3\/\/user_update",
            "description": "This method updates an existing user. Only the fields passed as arguments will be modified. It returns the ID of the updated user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "new_email",
                    "description": "New user email address.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "new_password",
                    "description": "New user password. (needs to be at least 4 characters long).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "94978923d31dab407d1ef8b398e93b6a",
            "name": "Get Event List Discounts",
            "url": "httpswww.eventbriteapi.com\/v3\/\/event_list_discounts",
            "description": "This method returns a list of discounts for a given event.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "The ticket ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "6fd1edd95f123fd3688530fb9a3a40f0",
            "name": "Get Discount New",
            "url": "httpswww.eventbriteapi.com\/v3\/\/discount_new",
            "description": "This method creates a new discount code for a specific event. It returns the ID of the newly created discount code.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "event_id",
                    "description": "The Event ID of the event that this tracking beacon will fire in",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "code",
                    "description": "Search term to find discounts by code\/name, in an exact match behavior.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amount_off",
                    "description": "The fixed amount off the ticket price. Each discount code can have a fixed discount amount or a variable (percentage) discount amount, but not both.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "percent_off",
                    "description": "The percentage off the ticket price. Each discount code can have a fixed discount amount or a variable (percentage) discount amount, but not both.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tickets",
                    "description": "Comma-separated list of ticket IDs for which the discount applies. If not provided, the discount will apply to all ticket types.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity_available",
                    "description": "Maximum number of times this discount can be used. If not provided, no maximum is set.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start_date",
                    "description": "The start time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "end_date",
                    "description": "The end time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "6d44a165ae2fa02af335472a987d89de",
            "name": "Get Discount Update",
            "url": "httpswww.eventbriteapi.com\/v3\/\/discount_update",
            "description": "This method is used to update an existing discount code. Only the fields passed as arguments will be modified. This method returns the ID of the modified discount code.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "The ticket ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "code",
                    "description": "Search term to find discounts by code\/name, in an exact match behavior.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amount_off",
                    "description": "The fixed amount off the ticket price. Each discount code can have a fixed discount amount or a variable (percentage) discount amount, but not both.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "percent_off",
                    "description": "The percentage off the ticket price. Each discount code can have a fixed discount amount or a variable (percentage) discount amount, but not both.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tickets",
                    "description": "Comma-separated list of ticket IDs for which the discount applies. If not provided, the discount will apply to all ticket types.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity_available",
                    "description": "Maximum number of times this discount can be used. If not provided, no maximum is set.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start_date",
                    "description": "The start time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "end_date",
                    "description": "The end time of the new event",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        },
        {
            "id": "807df977b61090f4e04aca0e09fa8033",
            "name": "Get Payment Update",
            "url": "httpswww.eventbriteapi.com\/v3\/\/payment_update",
            "description": "This method creates or updates the payment options for this event. Only the fields passed as arguments will be modified.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "event_id",
                    "description": "The Event ID of the event that this tracking beacon will fire in",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accept_paypal",
                    "description": "Accept PayPal payments (1 or 0).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "paypal_email",
                    "description": "Your PayPal email. Defaults to the user email address if not provided.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accept_google",
                    "description": "Accept Google Checkout payments (1 or 0).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "google_merchant_id",
                    "description": "Google Checkout Merchant ID. Required if accept_google is 1.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "google_merchant_key",
                    "description": "Google Checkout Merchant Key. Required if accept_google is 1.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accept_check",
                    "description": "Accept ???Pay by Check??? payments (1 or 0).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "instructions_check",
                    "description": "Instructions to attendees who want to pay by check.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accept_cash",
                    "description": "Accept ???Pay by Cash??? payments (1 or 0).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "instructions_cash",
                    "description": "Instructions to attendees who want to pay by cash.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accept_invoice",
                    "description": "Accept ???Send an Invoice??? payments (1 or 0).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "instructions_invoice",
                    "description": "Instructions to attendees who need to be sent an invoice.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "xml or json data-types are supported",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "11a4f0b61338449eda75b6ad4edc3a01",
            "rawModeData": ""
        }
    ]
}